// import br from './br.svg'
// import bk from './bk.svg'
// import bb from './bb.svg'
// import bki from './bki.svg'
// import bq from './bq.svg'
// import bp from './bp.svg'

// import wr from './wr.svg'
// import wk from './wk.svg'
// import wb from './wb.svg'
// import wki from './wki.svg'
// import wq from './wq.svg'
// import wp from './wp.svg'

const Wrapper = ({children}) => (
    <svg width="48" height="48" viewBox="0 0 48 48" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        {children}
    </svg>
)











// ICONS

const Bishop = () => (
    <Wrapper>
        <path fillRule="evenodd" clipRule="evenodd" d="M15.953 0.309998L15.891 0.368998C15.103 1.139 12.974 4.03 14.797 7.187H14.193C13.567 7.187 13.064 7.633 13.064 8.187C13.064 8.741 13.567 9.187 14.194 9.187H19.871C20.497 9.187 21 8.741 21 8.187C21 7.633 20.497 7.187 19.871 7.187H19.184C21.29 4.56 18.417 2.61 15.954 0.309998H15.953ZM15.857 0.399998C13.504 2.66 10.737 4.594 12.732 7.187H12.129C11.503 7.187 10.999 7.633 10.999 8.187C10.999 8.741 11.503 9.187 12.129 9.187H13.129C12.503 9.187 11.999 8.741 11.999 8.187C11.999 7.633 12.503 7.187 13.129 7.187H13.732C12.09 4.34 14.408 1.854 15.857 0.399998ZM12.498 10.187C12.417 15.507 11.903 19.522 10.871 23.687H11.871C12.903 19.522 13.417 15.507 13.498 10.187H12.498ZM14.562 10.187C14.481 15.507 13.968 19.522 12.935 23.687H21.175C20.139 19.521 19.608 15.507 19.521 10.187H14.562ZM10.621 24.687L10.619 24.697H10.617C9.517 24.697 8.617 25.597 8.617 26.697C8.617 27.063 8.725 27.401 8.898 27.697H8.625C7.496 27.697 6.5 28.496 6.5 29.576V29.812C6.5 29.898 6.502 29.906 6.502 29.837L6.5 30.47V31.69H7.5V30.47L7.502 29.837C7.502 29.906 7.5 29.898 7.5 29.812V29.576C7.5 28.496 8.496 27.696 9.625 27.696H9.898C9.71656 27.3938 9.61952 27.0485 9.617 26.696C9.617 25.597 10.517 24.696 11.617 24.696H11.619L11.621 24.686L10.621 24.687ZM12.685 24.687L12.683 24.697H12.681C11.582 24.697 10.681 25.597 10.681 26.697C10.681 27.063 10.789 27.401 10.963 27.697H10.689C9.56 27.697 8.564 28.496 8.564 29.576V29.812C8.564 29.898 8.566 29.906 8.566 29.837L8.564 30.47V31.69H25.5V29.572C25.5 28.492 24.504 27.692 23.375 27.692H23.168C23.341 27.397 23.449 27.058 23.449 26.692C23.449 25.593 22.549 24.692 21.449 24.692H21.428L21.426 24.682H12.686L12.685 24.687ZM24.973 29.792L25.049 29.832H24.909L24.973 29.794V29.792Z" fill="currentColor"/>
    </Wrapper>
)

const King = () => (
    <Wrapper>
        <path fillRule="evenodd" clipRule="evenodd" d="M15.59 0.001V1.025H14.59V2.025H15.59V2.882L11.469 4.767L12.469 7.003H12.129C11.503 7.003 11 7.449 11 8.003C11 8.543 11.481 8.974 12.086 8.995H13.104C12.499 8.975 12.018 8.544 12.018 8.003C12.018 7.449 12.521 7.003 13.146 7.003H13.486L12.486 4.767L16.008 2.882L13.643 4.767L14.643 7.003H14.303C13.677 7.003 13.173 7.449 13.173 8.003C13.173 8.543 13.655 8.974 14.26 8.995H19.914C20.52 8.975 21 8.544 21 8.003C21 7.449 20.497 7.003 19.871 7.003H19.525L20.51 4.779L16.59 2.855V2.025H17.59V1.025H16.59V0H15.59V0.001ZM12.484 9.995C12.411 15.135 11.912 19.678 10.864 23.995H11.881C12.929 19.678 13.428 15.135 13.502 9.995H12.484ZM14.658 9.995C14.584 15.135 14.086 19.678 13.038 23.995H21.184C20.13 19.672 19.6 15.14 19.521 9.995H14.658ZM10.619 24.995L10.617 25.005C9.517 25.005 8.617 25.906 8.617 27.005C8.617 27.371 8.725 27.71 8.898 28.005H8.625C7.496 28.005 6.5 28.805 6.5 29.885V30.121C6.5 30.207 6.502 30.215 6.502 30.146L6.5 30.566V31.999H7.518V30.566L7.52 30.146C7.52 30.215 7.518 30.206 7.518 30.121V29.884C7.518 28.804 8.514 28.005 9.643 28.005H9.916C9.73451 27.7028 9.63747 27.3575 9.635 27.005C9.635 25.906 10.535 25.005 11.635 25.005L11.637 24.995H10.619ZM12.793 24.995L12.791 25.005C11.691 25.005 10.791 25.906 10.791 27.005C10.791 27.371 10.899 27.71 11.072 28.005H10.8C9.671 28.005 8.675 28.805 8.675 29.885V30.121C8.675 30.207 8.677 30.215 8.677 30.146L8.675 30.566V31.999H25.5V29.88C25.5 28.8 24.504 28 23.375 28H23.168C23.3494 27.6978 23.4465 27.3525 23.449 27C23.449 25.901 22.549 25 21.449 25H21.429L21.428 24.99H12.793V24.995Z" fill="currentColor"/>
    </Wrapper>
)

const Knight = () => (
    <Wrapper>
        <path d="M17.6142 0.5C17.9142 0.855 18.2512 1.542 18.4392 2.344C18.4592 2.424 18.4672 2.504 18.4822 2.584H18.4652C17.5802 3.813 16.1212 4.536 14.5702 4.516C13.9892 6.029 12.4732 7.169 10.5822 7.514C9.16217 7.621 7.98517 8.548 7.65817 9.814C7.5782 10.1239 7.55249 10.4453 7.58217 10.764C7.59217 10.603 7.61217 10.448 7.64817 10.322C8.02617 9.035 9.26117 8.123 10.7202 8.061C12.6702 7.77 14.2622 6.65 14.9082 5.117C16.4982 5.189 17.5522 4.594 18.5002 3.363C18.0972 5.442 15.4842 5.852 15.4842 5.852C15.4842 5.852 14.4662 7.656 12.9572 8.229C11.7632 8.682 10.3652 8.959 9.60917 9.373C8.45917 10.005 8.08917 10.857 8.03917 12.059C8.21917 12.335 8.46517 12.572 8.73817 12.785C8.79034 12.6767 8.8798 12.5907 8.99017 12.543C9.87117 12.123 10.6842 11.639 11.4162 11.103C11.506 11.0356 11.6159 11.0003 11.7282 11.003C11.8331 11.0056 11.9345 11.0411 12.0181 11.1045C12.1017 11.1679 12.1632 11.256 12.194 11.3563C12.2247 11.4567 12.2232 11.5641 12.1894 11.6635C12.1557 11.7628 12.0916 11.8491 12.0062 11.91C11.2932 12.432 10.5062 12.895 9.67217 13.31C10.7742 13.696 12.0352 13.51 12.9512 12.78C12.9912 12.743 13.0082 12.725 13.0762 12.658C14.8562 13.423 17.0492 13.283 18.6362 12.342L18.6912 12.311C18.9652 12.144 18.7872 12.245 18.7872 12.245L18.7302 12.327C17.7462 13.602 17.6802 14.637 14.0722 15.546C10.4632 16.455 9.10017 20.364 9.82817 23.532H10.8772C10.1502 20.365 11.5132 16.966 15.1212 16.058C18.7302 15.148 18.7922 13.604 19.7772 12.329L19.8282 12.255L20.7362 11.825C19.7872 19.005 11.7262 14.005 11.7262 23.53L11.7322 24.01H20.5882V23.507H22.7482C22.8982 23.18 23.0332 22.848 23.1642 22.515L26.6212 22.505C27.9982 15.453 25.5132 6.971 21.0562 3.038L20.9362 2.95C20.2622 1.782 19.1062 0.865 17.6132 0.505L17.6142 0.5ZM18.1952 0.89C19.9082 2.228 20.3292 4.055 18.7202 4.926L18.4512 4.996C19.6622 2.617 18.3882 1.313 18.1952 0.89ZM16.9312 7.008C16.9432 7.00757 16.9552 7.00757 16.9672 7.008H17.9672C18.0998 7.008 18.227 7.06068 18.3207 7.15445C18.4145 7.24821 18.4672 7.37539 18.4672 7.508C18.4672 7.64061 18.4145 7.76779 18.3207 7.86155C18.227 7.95532 18.0998 8.008 17.9672 8.008H16.9672C16.8346 8.01277 16.7055 7.96467 16.6083 7.87428C16.5112 7.78389 16.4539 7.65861 16.4492 7.526C16.4444 7.39339 16.4925 7.26432 16.5829 7.16717C16.6733 7.07003 16.7986 7.01277 16.9312 7.008ZM10.7052 25.006C9.60517 25.006 8.70517 25.906 8.70517 27.006C8.70517 27.372 8.81317 27.71 8.98617 28.006H8.71417C7.58417 28.006 6.58917 28.805 6.58917 29.885V30.397L6.59117 30.67L6.58917 30.996V32H7.58917V30.996L7.59117 30.67L7.58917 30.397V29.885C7.58917 28.805 8.58517 28.006 9.71417 28.006H9.98717C9.80569 27.7038 9.70864 27.3585 9.70617 27.006C9.70617 25.906 10.6062 25.006 11.7062 25.006H10.7052ZM12.7052 25.006C11.6052 25.006 10.7052 25.906 10.7052 27.006C10.7052 27.372 10.8132 27.71 10.9862 28.006H10.7142C9.58417 28.006 8.58917 28.805 8.58917 29.885V30.397L8.59117 30.67L8.58917 30.996V32H25.5892V29.887C25.5892 28.807 24.5912 28.008 23.4622 28.008H23.2572C23.4383 27.7057 23.535 27.3604 23.5372 27.008C23.5372 25.909 22.6372 25.008 21.5372 25.008H12.7062L12.7052 25.006Z" fill="currentColor"/>
    </Wrapper>
)

const Pawn = () => (
    <Wrapper>
        <path fillRule="evenodd" clipRule="evenodd" d="M16 2.74652C15.337 2.74652 14.7011 3.00991 14.2322 3.47875C13.7634 3.9476 13.5 4.58348 13.5 5.24652C13.5006 5.63227 13.5905 6.01265 13.7626 6.35788C13.9347 6.70311 14.1843 7.00384 14.492 7.23652H13.5C12.946 7.23652 12.5 7.68252 12.5 8.23652C12.5 8.74352 12.879 9.14152 13.365 9.20952V9.21952H14.365V9.20952C14.1271 9.18033 13.9081 9.06541 13.7488 8.8863C13.5896 8.70719 13.5011 8.47617 13.5 8.23652C13.5 7.68252 13.946 7.23652 14.5 7.23652H15.022C14.004 5.84852 14.002 4.00852 16.141 2.76052C16.093 2.76052 16.047 2.74652 16 2.74652ZM16.147 2.76252C14.826 3.91852 14.46 5.62752 15.881 7.26252H15.373C15.1334 7.29016 14.9123 7.40464 14.7514 7.5843C14.5905 7.76397 14.5011 7.99636 14.5 8.23752C14.5 8.74352 14.879 9.14152 15.365 9.20952V9.21952H18.61C19.109 9.16252 19.5 8.75652 19.5 8.24152C19.5 7.68752 19.054 7.24152 18.5 7.24152H17.51C17.9161 6.93341 18.2181 6.50819 18.3751 6.02317C18.5321 5.53816 18.5366 5.01667 18.3881 4.529C18.2396 4.04132 17.9451 3.61091 17.5444 3.29577C17.1436 2.98063 16.6559 2.79591 16.147 2.76652V2.76252ZM13.363 10.2155C13.386 14.3315 13.06 17.8855 12.291 21.2465H13.291C14.06 17.8855 14.386 14.3315 14.363 10.2165H13.363V10.2155ZM15.363 10.2155C15.386 14.3315 15.06 17.8855 14.291 21.2465H19.707C18.934 17.8835 18.59 14.3305 18.611 10.2165H15.363V10.2155ZM12.055 22.2465L12.053 22.2565H11.692C10.693 22.2565 10 23.2125 10 24.2565C10 24.6135 10.085 24.9565 10.23 25.2565H9.854C8.83 25.2565 8 26.1095 8 27.1365V27.9095L8.002 27.9195V27.9295L8 28.2895V29.2535H9V28.2905L9.002 27.9295V27.9195L9 27.9095V27.1355C9 26.1085 9.83 25.2555 10.854 25.2555H11.231C11.0801 24.9437 11.0015 24.6019 11.001 24.2555C11.001 23.2125 11.693 22.2555 12.691 22.2555H13.053L13.055 22.2455L12.055 22.2465ZM14.055 22.2465L14.053 22.2565H13.692C12.693 22.2565 12 23.2125 12 24.2565C12 24.6135 12.085 24.9565 12.23 25.2565H11.854C10.83 25.2565 10 26.1085 10 27.1365V27.9095L10.002 27.9195V27.9295L10 28.2895V29.2535H24V27.1395C24 26.1125 23.169 25.2595 22.145 25.2595H21.768C21.9197 24.9479 21.999 24.6061 22 24.2595C22 23.2165 21.305 22.2595 20.307 22.2595H19.945L19.943 22.2495H14.055V22.2465Z" fill="currentColor"/>
    </Wrapper>
)

const Queen = () => (
    <Wrapper>
        <path d="M16.014 0.252014C15.8385 0.252147 15.6661 0.298398 15.5141 0.386169C15.3622 0.47394 15.2359 0.600129 15.1481 0.752075C15.0603 0.904021 15.014 1.07639 15.0138 1.25189C15.0136 1.42739 15.0595 1.59987 15.147 1.75201H14.74C14.145 1.75466 13.5753 1.99288 13.1555 2.41455C12.7357 2.83622 12.5 3.40701 12.5 4.00201C12.5 4.08801 12.516 4.16901 12.526 4.25201H12.129C11.503 4.25201 11 4.69801 11 5.25201C11 5.80601 11.503 6.25201 12.13 6.25201H12C12.5 6.75201 12.5 8.75201 12 9.25201H12.041C11.459 9.29201 11.001 9.71002 11.001 10.236C11.001 10.79 11.503 11.236 12.129 11.236H12.453V11.248H13.842V11.236H13.518C12.892 11.236 12.388 10.79 12.388 10.236C12.388 9.71002 12.848 9.29301 13.43 9.25201H13.389C13.889 8.75201 13.889 6.75201 13.389 6.25201H13.518C12.892 6.25201 12.388 5.80601 12.388 5.25201C12.388 4.69801 12.892 4.25201 13.518 4.25201H13.914C13.905 4.16901 13.889 4.08801 13.889 4.00201C13.889 2.76501 14.375 1.75201 15.609 1.75201H15.502C15.1 1.18301 15.365 0.467024 16.067 0.262024C16.048 0.261024 16.032 0.252014 16.014 0.252014ZM16.069 0.263977C15.55 0.428977 15.563 1.15901 16 1.75201H16.016C16.016 1.75201 14.824 2.32801 14.889 4.00201C14.889 4.08801 14.905 4.16901 14.914 4.25201H14.518C14.361 4.25201 14.213 4.28002 14.078 4.33002C13.673 4.48202 13.388 4.83701 13.388 5.25201C13.388 5.80601 13.892 6.25201 14.518 6.25201H14.388C14.888 6.75201 14.888 8.75201 14.388 9.25201H14.43C13.848 9.29301 13.389 9.71002 13.389 10.236C13.389 10.791 13.892 11.236 14.518 11.236H14.842V11.249H19.602V11.236H19.869C20.495 11.236 21 10.791 21 10.236C21 9.71002 20.54 9.29401 19.957 9.25201H20C19.5 8.75201 19.5 6.75201 20 6.25201H19.87C20.495 6.25201 21 5.80601 21 5.25201C21 4.69801 20.495 4.25201 19.87 4.25201H19.475C19.484 4.16901 19.5 4.08801 19.5 4.00201C19.4995 3.40682 19.2634 2.83604 18.8432 2.41443C18.4231 1.99282 17.8532 1.75466 17.258 1.75201H16.881C16.9655 1.60442 17.0107 1.43763 17.0124 1.26758C17.0141 1.09753 16.9722 0.929877 16.8906 0.78064C16.8091 0.631402 16.6907 0.505546 16.5466 0.4151C16.4026 0.324654 16.2388 0.272616 16.069 0.263977ZM12.397 12.248C12.193 16.525 11.703 20.276 10.865 23.748H11.74C12.578 20.276 13.068 16.525 13.272 12.248H12.397ZM14.272 12.248C14.068 16.525 13.578 20.276 12.74 23.748H21.182C20.35 20.278 19.878 16.526 19.66 12.248H14.272ZM10.619 24.748L10.617 24.758C9.517 24.758 8.617 25.659 8.617 26.758C8.617 27.124 8.725 27.462 8.899 27.758H8.625C7.496 27.758 6.5 28.558 6.5 29.638V30.06L6.502 30.074L6.5 30.566V31.748H7.375V30.566L7.377 30.074C7.377 30.064 7.375 30.063 7.375 30.06V29.636C7.375 28.556 8.371 27.757 9.5 27.757H9.774C9.59216 27.4549 9.49477 27.1096 9.492 26.757C9.492 25.658 10.392 24.757 11.492 24.757L11.494 24.747L10.619 24.748ZM12.494 24.748L12.492 24.758C11.392 24.758 10.492 25.659 10.492 26.758C10.492 27.124 10.6 27.462 10.774 27.758H10.5C9.371 27.758 8.375 28.558 8.375 29.638V30.06L8.377 30.074L8.375 30.566V31.747H25.5V29.629C25.5 28.549 24.502 27.749 23.373 27.749H23.168C23.3494 27.4468 23.4465 27.1014 23.449 26.749C23.449 25.651 22.549 24.749 21.449 24.749H21.428L21.426 24.739H12.494V24.748Z" fill="currentColor"/>
    </Wrapper>
)

const Rook = () => (
    <Wrapper>
        <path fillRule="evenodd" clipRule="evenodd" d="M11.311 0.998475C11.187 0.998739 11.0681 1.04813 10.9804 1.13584C10.8927 1.22355 10.8433 1.34244 10.843 1.46648V6.15247C10.843 6.41147 11.053 6.62148 11.311 6.62148H12.729C12.733 7.09148 12.733 7.55648 12.731 8.02148H12.372C11.785 8.02148 11.312 8.44147 11.312 8.96147C11.312 9.48047 11.785 9.89848 12.372 9.89848H13.31C12.723 9.89848 12.249 9.48048 12.249 8.96048C12.249 8.44048 12.723 8.02148 13.309 8.02148H13.669C13.671 7.55648 13.671 7.09148 13.667 6.62148C13.6053 6.62148 13.5443 6.60931 13.4873 6.58568C13.4303 6.56205 13.3786 6.52741 13.335 6.48375C13.2915 6.4401 13.2569 6.38828 13.2334 6.33126C13.2099 6.27424 13.1979 6.21315 13.198 6.15147V1.46748C13.198 1.45148 13.2 1.43748 13.202 1.42048C13.203 1.40469 13.205 1.38899 13.208 1.37348L13.22 1.32848C13.2249 1.31399 13.2302 1.29965 13.236 1.28548C13.242 1.27148 13.247 1.25748 13.255 1.24548C13.262 1.23148 13.272 1.21748 13.28 1.20548C13.2954 1.17944 13.3146 1.15584 13.337 1.13548C13.3641 1.11084 13.3928 1.08812 13.423 1.06748C13.3542 1.02455 13.2751 1.00105 13.194 0.999475H11.312L11.311 0.998475ZM15.056 0.998475C14.9315 0.998209 14.812 1.04734 14.7237 1.13507C14.6354 1.22281 14.5855 1.342 14.585 1.46648V2.86548H14.135V6.15247C14.135 6.41047 14.346 6.62048 14.605 6.62148C14.608 7.09148 14.608 7.55648 14.606 8.02148H14.247C13.66 8.02148 13.187 8.44147 13.187 8.96147C13.187 9.48047 13.66 9.89848 14.247 9.89848H19.63C20.217 9.89848 20.688 9.48048 20.688 8.96048C20.688 8.44048 20.217 8.02148 19.63 8.02148H19.286C19.283 7.55648 19.282 7.09148 19.286 6.62148H20.704C20.964 6.62148 21.173 6.41148 21.173 6.15147V1.46748C21.1727 1.34326 21.1232 1.22423 21.0353 1.13649C20.9474 1.04875 20.8282 0.999475 20.704 0.999475H18.843C18.583 0.999475 18.373 1.20948 18.374 1.46948L18.382 2.86648H17.432V1.46648C17.4312 1.34286 17.3818 1.22454 17.2944 1.13713C17.2069 1.04972 17.0886 1.00026 16.965 0.999475H15.057L15.056 0.998475ZM13.433 1.07248C13.4803 1.09807 13.5214 1.13395 13.553 1.17748C13.5196 1.13561 13.4789 1.10005 13.433 1.07248ZM13.661 1.45748L13.657 2.86348H13.663V1.46648L13.661 1.45748ZM12.661 10.8355C12.508 15.5095 12.039 19.8415 11.179 23.4955H12.116C12.976 19.8415 13.446 15.5095 13.599 10.8355H12.661ZM14.536 10.8355C14.383 15.5095 13.914 19.8415 13.054 23.4955H20.866C20.003 19.8405 19.517 15.5085 19.356 10.8355H14.536ZM10.954 24.4335L10.952 24.4435C10.4553 24.4453 9.97945 24.6435 9.62822 24.9947C9.27698 25.3459 9.07885 25.8218 9.077 26.3185C9.077 26.6615 9.178 26.9785 9.341 27.2555H9.085C8.026 27.2555 7.091 28.0005 7.091 29.0135V29.2365C7.091 29.3165 7.093 29.3245 7.093 29.2595L7.091 29.9875V30.9975H8.028V29.9875L8.03 29.2595C8.03 29.3245 8.028 29.3165 8.028 29.2365V29.0135C8.028 28.0015 8.964 27.2525 10.022 27.2525H10.28C10.1099 26.969 10.0191 26.6451 10.017 26.3145C10.0183 25.8179 10.216 25.3421 10.5669 24.9908C10.9178 24.6395 11.3935 24.4413 11.89 24.4395L11.892 24.4295H10.954V24.4335ZM12.829 24.4335L12.827 24.4435C12.3305 24.4453 11.8548 24.6435 11.5039 24.9948C11.153 25.3461 10.9553 25.8219 10.954 26.3185C10.954 26.6615 11.054 26.9785 11.218 27.2555H10.96C9.901 27.2555 8.966 28.0055 8.966 29.0175V29.2405C8.966 29.3205 8.968 29.3285 8.968 29.2635L8.966 29.9915V31.0015H24.909V29.0195C24.909 28.0065 23.974 27.2575 22.915 27.2575H22.724C22.886 26.9805 22.987 26.6635 22.987 26.3205C22.9857 25.8236 22.7877 25.3475 22.4364 24.9961C22.085 24.6448 21.6089 24.4468 21.112 24.4455H21.092L21.091 24.4355H12.829V24.4335Z" fill="currentColor"/>
    </Wrapper>
)














// PIECES IMAGES

const Br = () => (
    <Wrapper>
        <g fill="#000" stroke="#000" strokeWidth="1.5" strokeLinejoin="round">
            <path d="
                M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14
                L 31,17 L 31,29.5 L 33,32 L 33,36 L 12,36 L 12,32 L 14,29.5 L 14,17 Z
            "/>
            <path d="M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z"/>
        </g>
        <g fill="none" stroke="#FFF" strokeLinecap="round">
            <line strokeWidth="1.2" x1="11" y1="14.0" x2="34" y2="14.0"/>
            <line strokeWidth="0.8" x1="14" y1="17.0" x2="31" y2="17.0"/>
            <line strokeWidth="0.8" x1="14" y1="29.5" x2="31" y2="29.5"/>
            <line strokeWidth="1.2" x1="12" y1="32.0" x2="33" y2="32.0"/>
            <line strokeWidth="1.2" x1="12" y1="35.5" x2="33" y2="35.5"/>
        </g>
    </Wrapper>
)

const Bk = () => (
    <Wrapper>
        <g fill="#000" stroke="#000" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round">
            <path d="M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18"/>
            <path d="M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10"/>
        </g>
        <g fill="#FFF" stroke="#FFF" strokeWidth="1.5" strokeLinejoin="round">
            <path stroke="none" d="M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49 32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L 37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5 L 24.55,10.4 Z"/>
            <path d="M 9.5,25.5 A 0.5,0.5,0 1,1 8.5,25.5 A 0.5,0.5,0 1,1 9.5,25.5 Z"/>
            <path d="M 15.25,14.2 A 0.5,1.5,30 1,1 13.75,16.8 A 0.5,1.5,30 1,1 15.25,14.2 Z"/>
        </g>
    </Wrapper>
)


const Bb = () => (
    <Wrapper>
        <g fill="#000" stroke="#000" strokeWidth="1.5" strokeLinejoin="round">
            <circle cx="22.5" cy="8" r="2.5"/>
            <path d="M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 Z"/>
            <path d="M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 Z"/>
        </g>
        <g fill="none" stroke="#FFF" strokeWidth="1.5" strokeLinecap="round">
            <path d="M 17.5,26 L 27.5,26"/>
            <path d="M 15.0,30 L 30.0,30"/>
            <path d="M 22.5,15 L 22.5,22 M 20,17.5 L 25,17.5"/>
        </g>
    </Wrapper>
)

const Bki = () => (
    <Wrapper>
        <g fill="#000" stroke="#000" strokeWidth="1.5" strokeLinejoin="round">
            <path fill="none" strokeLinecap="round" d="M 22.5,11.63 L 22.5,6 M 20,8 L 25,8"/>
            <path d="M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25"/>
            <path d="M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37"/>
        </g>
        <g fill="none" stroke="#FFF" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round">
            <path strokeLinecap="square" d="M 22.5,20 C 22.5,20 25.75,17 24.5,14.5 C 24.5,14.5 24,13 22.5,13 C 21,13 20.5,14.5 20.5,14.5 C 19.25,17 22.5,20 22.5,20"/>
            <path d="M 32,29.5 C 32,29.5 40.5,25.5 38.03,19.85 C 34.15,14 25,18 22.5,24.5 L 22.51,26.6 L 22.5,24.5 C 20,18 9.906,14 6.997,19.85 C 4.5,25.5 11.85,28.85 11.85,28.85"/>
            <path d="M 11.5,30 C 17,27 27,27 32.5,30"/>
            <path d="M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5"/>
            <path d="M 11.5,37 C 17,34 27,34 32.5,37"/>
        </g>
    </Wrapper>
)

const Bq = () => (
    <Wrapper>
        <g fill="#000" stroke="#000" strokeWidth="1.5" strokeLinejoin="round">
            <path d="M 9,26 C 17.5,24.5 30,24.5 36,26 L 38.5,13.5 L 31,25 L 30.7,10.9 L 25.5,24.5 L 22.5,10 L 19.5,24.5 L 14.3,10.9 L 14,25 L 6.5,13.5 L 9,26 Z"/>
            <circle cx="6"    cy="12" r="2"/>
            <circle cx="14"   cy="9"  r="2"/>
            <circle cx="22.5" cy="8"  r="2"/>
            <circle cx="31"   cy="9"  r="2"/>
            <circle cx="39"   cy="12" r="2"/>
            <path d="M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 36,37.5 34.5,36 C 34.5,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 Z"/>
        </g>
        <g fill="none" stroke="#FFF" strokeWidth="1.5" strokeLinecap="round">
            <path d="M 9,26 C 17.5,24.5 30,24.5 36,26"/>
            <path d="M 11.5,30 C 15,29 30,29 33.5,30"/>
            <path d="M 12,33.5 C 18,32.5 27,32.5 33,33.5"/>
        </g>
    </Wrapper>
)

const Bp = () => (
    <Wrapper>
        <g fill="#000" stroke="#000" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="miter">
            <path d="M 22.5,9
                C 20.29,9 18.5,10.79 18.5,13 C 18.5,13.89 18.79,14.71 19.28,15.38
                C 17.33,16.5 16,18.59 16,21 C 16,23.03 16.94,24.84 18.41,26.03
                C 15.41,27.09 11,31.58 11,39.5
                L 34,39.5
                C 34,31.58 29.59,27.09 26.59,26.03
                C 28.06,24.84 29,23.03 29,21 C 29,18.59 27.67,16.5 25.72,15.38
                C 26.21,14.71 26.5,13.89 26.5,13 C 26.5,10.79 24.71,9 22.5,9
            Z"/>
        </g>
    </Wrapper>
)



const Wr = () => (
    <Wrapper>
        <g fill="#FFF" stroke="#000" strokeWidth="1.5" strokeLinejoin="round">
            <path d="
                M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14
                L 31,17 L 31,29.5 L 33,32 L 33,36 L 12,36 L 12,32 L 14,29.5 L 14,17 Z
            "/>
            <path d="M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z"/>
        </g>
        <g fill="none" stroke="#000" strokeLinecap="round">
            <line strokeWidth="1.2" x1="11" y1="14.0" x2="34" y2="14.0"/>
            <line strokeWidth="0.8" x1="14" y1="17.0" x2="31" y2="17.0"/>
            <line strokeWidth="0.8" x1="14" y1="29.5" x2="31" y2="29.5"/>
            <line strokeWidth="1.2" x1="12" y1="32.0" x2="33" y2="32.0"/>
        </g>
    </Wrapper>
)

const Wk = () => (
    <Wrapper>
        <g fill="#FFF" stroke="#000" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round">
            <path d="M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18"/>
            <path d="M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10"/>
        </g>
        <g fill="#000" stroke="#000" strokeWidth="1.5" strokeLinejoin="round">
            <path d="M 9.5,25.5 A 0.5,0.5,0 1,1 8.5,25.5 A 0.5,0.5,0 1,1 9.5,25.5 Z"/>
            <path d="M 15.25,14.2 A 0.5,1.5,30 1,1 13.75,16.8 A 0.5,1.5,30 1,1 15.25,14.2 Z"/>
        </g>
    </Wrapper>
)

const Wb = () => (
    <Wrapper>
        <g fill="#FFF" stroke="#000" strokeWidth="1.5" strokeLinejoin="round">
            <circle cx="22.5" cy="8" r="2.5"/>
            <path d="M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 Z"/>
            <path d="M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 Z"/>
        </g>
        <g fill="none" stroke="#000" strokeWidth="1.5" strokeLinecap="round">
            <path d="M 17.5,26 L 27.5,26"/>
            <path d="M 15.0,30 L 30.0,30"/>
            <path d="M 22.5,15 L 22.5,22 M 20,17.5 L 25,17.5"/>
        </g>
    </Wrapper>
)

const Wki = () => (
    <Wrapper>
        <g fill="#FFF" stroke="#000" strokeWidth="1.5" strokeLinejoin="round">
            <path fill="none" strokeLinecap="round" d="M 22.5,11.63 L 22.5,6 M 20,8 L 25,8"/>
            <path d="M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25"/>
            <path d="M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37"/>
        </g>
        <g fill="none" stroke="#000" strokeWidth="1.5" strokeLinecap="round">
            <path d="M 11.5,30 C 17,27 27,27 32.5,30"/>
            <path d="M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5"/>
            <path d="M 11.5,37 C 17,34 27,34 32.5,37"/>
        </g>
    </Wrapper>
)
const Wq = () => (
    <Wrapper>
        <g fill="#FFF" stroke="#000" strokeWidth="1.5" strokeLinejoin="round">
            <path d="M 9,26 C 17.5,24.5 30,24.5 36,26 L 38.5,13.5 L 31,25 L 30.7,10.9 L 25.5,24.5 L 22.5,10 L 19.5,24.5 L 14.3,10.9 L 14,25 L 6.5,13.5 L 9,26 Z"/>
            <circle cx="6"    cy="12" r="2"/>
            <circle cx="14"   cy="9"  r="2"/>
            <circle cx="22.5" cy="8"  r="2"/>
            <circle cx="31"   cy="9"  r="2"/>
            <circle cx="39"   cy="12" r="2"/>
            <path d="M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 36,37.5 34.5,36 C 34.5,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 Z"/>
        </g>
        <g fill="none" stroke="#000" strokeWidth="1.5" strokeLinecap="round">
            <path d="M 11.5,30 C 15,29 30,29 33.5,30"/>
            <path d="M 12,33.5 C 18,32.5 27,32.5 33,33.5"/>
        </g>
    </Wrapper>
)
const Wp = () => (
    <Wrapper>
        <g fill="#FFF" stroke="#000" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="miter">
            <path d="M 22.5,9
                C 20.29,9 18.5,10.79 18.5,13 C 18.5,13.89 18.79,14.71 19.28,15.38
                C 17.33,16.5 16,18.59 16,21 C 16,23.03 16.94,24.84 18.41,26.03
                C 15.41,27.09 11,31.58 11,39.5
                L 34,39.5
                C 34,31.58 29.59,27.09 26.59,26.03
                C 28.06,24.84 29,23.03 29,21 C 29,18.59 27.67,16.5 25.72,15.38
                C 26.21,14.71 26.5,13.89 26.5,13 C 26.5,10.79 24.71,9 22.5,9
            Z"/>
        </g>
    </Wrapper>
)










const pieceMap = {
    br: Br,
    bk: Bk,
    bb: Bb,
    bki: Bki,
    bq: Bq,
    bp: Bp,
    wr: Wr,
    wk: Wk,
    wb: Wb,
    wki: Wki,
    wq: Wq,
    wp: Wp
}

export const PieceImg = ({name}) => {
    const Img = pieceMap[name]
    if(!Img) { return; }
    return <Img />
}



const iconsMap = {
    b: Bishop,
    ki: King,
    k: Knight,
    p: Pawn,
    q: Queen,
    r: Rook
}

export const Icon = ({name}) => {
    const Img = iconsMap[name]
    if(!Img) { return; }
    return <Img />
}